install.packages(dplyr)
install.packages("dplyr"")
""
install.packages("dplyr")
library(dplyr)
murders
install.packages(dslabs)
install.packages("dslabs")
library(dslabs)
murders
pop <- murders$population/10^6
gun_murders <- murders$total
pop
gun_murders
nrow(gun_murders)
length(gu)
length(gun_murders)
plot(pop,gun_murders)
data("murders")
?data()
?library()
ifelse(1>2,1,2)
c -> c(1,2,3,4,5)
a -> c(1,2,3,4,5)
a <- c(1,2,3,4,5)
c <- c(1,2,3,4,5)
c
a
ifelse(c<3,T,F)
library(dslabs)
data("heights")
heights
table(heights$sex)
table(heights$height)
prop.table(table(heights$sex))
table(heights$sex)
a <- list(x='1',y='2',z='3')
a
b <- list(x='11',y='22',z='33')
class(a$x)
class(a$y)
class(a$z)
class(a)
l <- c(a,b)
l
l$x
l$b$x
l[['x']]
l[["x"]]
fix(a)
a
new_a <- edit(s)
new_a <- edit(a)
a
new_a
ls()
rm(new_a)
ls()
ls()
a
fix(a)
a
class(a)
l[[4]]
l$x
l
l[4]
Churn <- read.csv("~/Documents/Analtics Path Files/Files:Data/Churn.csv")
View(Churn)
colnames(Churn)
Churn_temp_2 = select(Churn,starts_with("Day"))
Churn
Churn_temp_2 = select(Churn,starts_with("Day"))
## Functions from Other Package
library(dplyr)
Churn_temp_2 = select(Churn,starts_with("Day"))
View(Churn_temp_2)
colnames(Churn)
## Functions from Other Package
library(dplyr)
## Arrange
Churn_temp = arrange(Churn, Day.Mins)
View(Churn_temp)
View(Churn_temp)
?mutate()
## Mutate
Churn_temp = mutate(Churn, Total.Usage = Day.Mins + Eve.Mins + Night.Mins)
Churn_temp
##lubridate ##stringr
install.packages("stringr")
##lubridate ##stringr
install.packages("lubridate")
##lubridate ##stringr
library(stringr)
##lubridate ##stringr
library(lubridate)
date_str = "04/10/2018"
date = as.Date(date_str, "%d/%m/%Y")
date
date_str2 = "04-10-2018"
date_2 = as.Date(date_2, "%d-%m-%Y")
date_2 = as.Date(date_str2, "%d-%m-%Y")
date_2
date_str3 = "04-Oct-2018"
date_3 = as.Date(date_str3,"%d-%b-%Y")
date_3
date_str4 =  "01-01-99"
date_4 = as.Date(date_str4,"%d-%m-%y")
date_4
day(date_4)
month(date_4)
month(date)
weekdays(date)
year(date)
week(date)
week(date_4)
week(as.Date("31-12-2017","%d-%m-%Y"))
## Character Functions
a = "apple"
nchar(a)
length(a)
substr(a,2,4)
a = "01/01/2018"
a
sub("/",".",a)
gsub("/",".",a)
?paste()
first = "Chetan"
last = "Bommu"
name = paste(first,last, sep = " ")
name
first = "Chetan"
last = "Bommu"
name = paste(first,last)
name
first = "Chetan"
last = "Gautham"
name = paste(first,last)
name
##  string split
name = "Apple-Iphone"
strsplit(name,"-")
class(strsplit(name,"-"))
unlist(strsplit(name = paste(first,last))
;
unlist(strsplit(name,split = "-"))
class(unlist(strsplit(name,split = "-")))
### sqldf
library(sqldf)
### sqldf
install.packages("sqldf")
library(sqldf)
### sqldf
install.packages("sqldf")
### sqldf
install.packages("sqldf")
library(sqldf)
### sqldf
install.packages("sqldf")
install.packages("sqldf")
### sqldf
install.packages("sqldf")
install.packages("sqldf")
### sqldf
install.packages("sqldf")
install.packages("sqldf")
library(sqldf)
Churn
select * from Churn
sqldf("select * from Chrun")
sqldf("select * from Churn")
gsub(colnames(Churn),"\\.","-")
Churn2
Churn_temp
churn_names = colnames(Churn)
churn_names = gsub(churn_names, pattern = "\\.", replacement = "_")
names(Churn) = churn_names
Churn_sql_res = sqldf("select * from Churn where Day_Mins >= 200")
Churn_sql_res
Train = read.csv("train.csv",header = T,sep = ",")
table(Train$Stay)
getwd()
setwd("/Users/chetanbommu/Documents/Analtics Path Files/R exercise data/")
Train = read.csv("train.csv",header = T,sep = ",")
table(Train$Stay_In_Current_City_Years)
ifelse(Train$Stay_In_Current_City_Years == "4+",Train$Stay_In_Current_City_Years = 4,)
ifelse(Train$Stay_In_Current_City_Years == "4+",Train$Stay_In_Current_City_Years <- 4,)
ifelse(Train$Stay_In_Current_City_Years == "4+",4,)
ifelse(Train$Stay_In_Current_City_Years == "4+",4,Train$Stay_In_Current_City_Years)
table(Train$Stay_In_Current_City_Years)
Train = read.csv("train.csv",header = T,sep = ",")
table(Train$Stay_In_Current_City_Years)
table(ifelse(Train$Stay_In_Current_City_Years == "4+",4,Train$Stay_In_Current_City_Years))
Train = read.csv("train.csv",header = T,sep = ",")
Train$Stay_In_Current_City_Years1 = as.character(Train$Stay_In_Current_City_Years)
class(Train$Stay_In_Current_City_Years1)
table(Train$Stay_In_Current_City_Years1)
ifelse(Train$Stay_In_Current_City_Years1 == "4+",4,Train$Stay_In_Current_City_Years1)
table(Train$Stay_In_Current_City_Years1)
table(Train$Stay_In_Current_City_Years1)
Train$Stay_In_Current_City_Years1
Train$Stay_In_Current_City_Years1 = ifelse(Train$Stay_In_Current_City_Years1 == "4+",4,Train$Stay_In_Current_City_Years1)
table(Train$Stay_In_Current_City_Years1)
df <- tibble(
x = sample(10, 100, rep = TRUE),
y = sample(10, 100, rep = TRUE)
)
nr
View(Churn_sql_res)
library(dplyr)
distinct(Train)
nrow(distinct(Train))
a = c(1,1,2,3)
b = c('a','a','b','a')
df1 = data.frame(a,b)
df1
distinct(df1)
nrow(distinct(df1))
nrow(distinct(Train[Train$Age == "26-35" & Train$Marital_Status == 0,]))
distinct(Train$Age)
distinct(Train$Age)
table(Train$Age)
length(table(Train$Age))
Train$User_ID
distinct(Train[,Train$User_ID])
Train[,Train$User_ID]
table(Train$User_ID)
length(table(Train$User_ID))
Train$Product_ID
table(Train$Product_ID)
max(table(Train$Product_ID))
which.max(table(Train$Product_ID))
view(Train$Product_ID)
view(Train[Train$Product_ID == "P00265242",])
Train[Train$Product_ID == "P00265242",]
?which.max()
a = Train[Train$Age == "26-35" & Train$Marital_Status == 0,]
a
length(unique(a))
length(unique(a$User_ID))
Train$Age
unique(Train$Age)
length(unique(Train$Age))
length(unique(Train$User_ID))
table(Train$Product_ID)
max(table(Train$Product_ID))
df1
table(df1$a)
max(table(df$a))
max(table(df1$a))
rank(max(table(df1$a)))
df1$a[ rank(max(table(df1$a)))]
edit(df1)
edit(a)
a
str(df1)
rank(max(table(df1$a)))
rank(max(table(Train$Product_ID)))
max(table(Train$Product_ID))
order(max(table(Train$Product_ID)))
sort(Train$Product_ID)
?sort()
sort(Train)
sort(Train$Product_ID,decreasing = T)
sort(Train$Product_ID,decreasing = T)[1]
Train[Train$Product_ID == "P0099942",]
length(Train[Train$Product_ID == "P0099942",])
nrow(Train[Train$Product_ID == "P0099942",])
Train[Train$Product_ID == "P0099942",]
class(Train$Product_ID)
