sample2 = sample(titanic_train,500, replace = FALSE)
sample2 = sample(titanic_train,5, replace = FALSE)
sample2
## 8.	 Compute the mean fare by PClass
aggregate(titanic_train~Pclass, FUN = "Mean")
## 8.	 Compute the mean fare by PClass
aggregate(titanic_train~Pclass, FUN = mean)
## 8.	 Compute the mean fare by PClass
aggregate(Fare~Pclass,titanic_train, FUN = mean)
## 9.	 Seperate the records of all the classes and compute the mean
Pclass_1 = titanic_train[Pclass=1,]
## 9.	 Seperate the records of all the classes and compute the mean
Pclass_1 = titanic_train[Pclass = 1, ]
## 9.	 Seperate the records of all the classes and compute the mean
Pclass_1 = titanic_train[Pclass == 1, "Fare"]
## 9.	 Seperate the records of all the classes and compute the mean
Pclass_1 = titanic_train[titanic_train$Pclass == 1, "Fare"]
Pclass_1
titanic_train
Pclass_1
mean(Pclass_1)
aggregate(Fare~Pclass,titanic_train, FUN = mean)
Pclass_2 = titanic_train[titanic_train$Pclass == 2, "Fare"]
mean(Pclass_2)
Pclass_3 = titanic_train[titanic_train$Pclass == 3, "Fare"]
mean(Pclass_3)
## 11.	 What is the propability of a person with age greater than 50
## use pnorm
?pnorm
pnorm(50,mean(titanic_train$Age, na.rm = TRUE), sd(titanic_train$Age, na.rm = TRUE))
pnorm(50,mean(titanic_train$Age, na.rm = TRUE), sd(titanic_train$Age, na.rm = TRUE), lower.tail = FALSE)
## 12.	 what is the propability of fiding a person between the age of 40 and 50?
p50 = pnorm(50,mean(titanic_train$Age, na.rm = TRUE), sd(titanic_train$Age, na.rm = TRUE))
p40 = pnorm(40,mean(titanic_train$Age, na.rm = TRUE), sd(titanic_train$Age, na.rm = TRUE))
p50 - p40
p50
p40
p50 - p40
## 13.	 what is 75th percentile age?
summary(titanic_train$Age)
?quantile
quantile(titanic_train$Age,probs = .75, na.rm = T)
?qnorm
qnorm(.75, mean(titanic_train$Age, na.rm = T), sd(titanic_train$Age, na.rm = T))
## 14.	 age of the 95% of the people ( lower(2.5%) and upper(97.5%))?
quantile(titanic_train$Age,probs = .975, na.rm = T)
quantile(titanic_train$Age,probs = .025, na.rm = T)
## 14.	 age of the 95% of the people ( lower(2.5%) and upper(97.5%))?
quantile(titanic_train$Age,probs = c(0.975,0.025), na.rm = T) ## 62
hist(titanic_train$Age)
## 15.	 Plot the probability density of age variable
?hist
hist(titanic_train$Age)
## 16.	 Compute Z values for Fare variable
?z
## 15.	 Plot the probability density of age variable
plot(density(titanic_train$Age, na.rm = T), main = "Age Plot", xlab = "Age", ylab = "Density")
## 15.	 Plot the probability density of age variable
?density
?plot
## 2.	 titanic_train is used in the dataset
## data("titanic_train")
## head(titanic_train)
head(titanic_train)
## Practice Exercises:
## 1.	Use titanic data ïƒ  library(titanic)
library(titanic)
## 2.	 titanic_train is used in the dataset
## data("titanic_train")
## head(titanic_train)
head(titanic_train)
## 16.	 Compute Z values for Fare variable
z_score = (titanic_train$Fare - mean(titanic_train$Fare, na.rm = T))/sd(titanic_train$Fare, na.rm = T)
z_score
## 16.	 Compute Z values for Fare variable
z_score_Fare = (titanic_train$Fare - mean(titanic_train$Fare, na.rm = T))/sd(titanic_train$Fare, na.rm = T)
## z-score is used to normalize the data
range(z_score_Fare)
range(titanic_train$Fare)
?scale
scale(titanic_train$Fare)
range(titanic_train$Fare)
## z-score is used to normalize the data
range(z_score_Fare)
range(scale(titanic_train$Fare))
min(titanic_train$Fare)
max(titanic_train$Fare)
## 17.	 Convert the Fare into standard normal values
standardized_values = (titanic_train$Fare - min(titanic_train$Fare))/(max(titanic_train$Fare) - min(titanic_train$Fare))
standardized_values
which.max(titanic_train$Fare)
standardized_values[259]
standardized_values
## 18.	 Is there a difference in mean age of Males anf Females on Titanic?
help("t.test")
titanic_train$Sex
age_male = mean(titanic_train$Age[titanic_train$Sex == "male"])
age_male
age_male = mean(titanic_train$Age[titanic_train$Sex == "male"], na.rm = T)
age_male
age_female = mean(titanic_train$Age[titanic_train$Sex == "female"], na.rm = T)
age_female
mean(titanic_train$Age, na.rm = T)
mean(c(30.72,27.91))
titanic_age_male = titanic_train[titanic_train$Sex == "male"]
titanic_age_female = titanic_train[titanic_train$Sex == "female"]
t.test(titanic_age_male, titanic_age_female, alternative = "greater")
titanic_age_male = titanic_train[titanic_train$Sex == "male"]
titanic_age_male = titanic_train[titanic_train$Sex == "male",]
titanic_age_female = titanic_train[titanic_train$Sex == "female",]
t.test(titanic_age_male, titanic_age_female, alternative = "greater")
t.test(titanic_age_male$Age, titanic_age_female$Age, alternative = "greater")
titanic_age_female = titanic_train[titanic_train$Sex == "female","Age"]
titanic_age_female
titanic_age_male = titanic_train[titanic_train$Sex == "male","Age"]
titanic_age_female = titanic_train[titanic_train$Sex == "female","Age"]
## p-value > 0.05 tells to accept Alternate Hypothesis and reject Null Hypothesis
t.test(titanic_age_male, titanic_age_female, alternative = "greater")
t.test(titanic_age_male, titanic_age_female, alternative = "two.sided")
## p-value > 0.05 => accept Alternate Hypothesis and reject Null Hypothesis
t.test(titanic_age_male, titanic_age_female, alternative = "greater")
t.test(titanic_age_male, titanic_age_female, alternative = "less")
## or
t.test(titanic_train$Age ~ titanic_train$Sex,alternative = "less")
## or
t.test(titanic_train$Age ~ titanic_train$Sex,alternative = "less")
t.test(titanic_age_male, titanic_age_female, alternative = "less")
## p-value > 0.05 => accept Alternate Hypothesis and reject Null Hypothesis
t.test(titanic_age_male, titanic_age_female, alternative = "greater")
## p-value > 0.05 => accept Null Hypothesis and reject Alternate Hypothesis
t.test(titanic_age_male, titanic_age_female, alternative = "greater")
t.test(titanic_age_male, titanic_age_female, alternative = "less")
t.test(titanic_age_male, titanic_age_female, alternative = "two.sided")
titanic_train$Survived
## 21.	 What is the propability of survival?
sum(titanic_train$Survived)
## 21.	 What is the propability of survival?
sum(titanic_train$Survived)/length(titanic_train$Survived)
length(titanic_train$Survived)
prop.table(table(titanic_train$Survived))
prop.table(table(titanic_train$Survived))[2]
## 22.	 what is the propability of survial for Males?
prop.table(table(titanic_train[titanic_train$Sex == "male",]$Survived))[2]
## 23.	 what is the propability of survival of females?
prop.table(table(titanic_train[titanic_train$Sex == "female",]$Survived))[2]
## 22.	 what is the propability of survial for Males?
titanic_train_with_male = titanic_train[titanic_train$Sex == "male",]
prop.table(table(titanic_train_with_male$Survived))[2]
## 24.	 what is the propability of survival for females in second class?
titanic_train_with_female
titanic_train_with_female = titanic_train[titanic_train$Sex == "female",]
## 23.	 what is the propability of survival of females?
prop.table(table(titanic_train_with_female$Survived))[2]
## 24.	 what is the propability of survival for females in second class?
titanic_train_with_female
## 24.	 what is the propability of survival for females in second class?
head(titanic_train_with_female)
## 24.	 what is the propability of survival for females in second class?
prop.table(table(titanic_train_with_female[titanic_train$Pclass == 2 ,]$Survived))[2]
## 25.	 what is the propability of survival for males in second class?
prop.table(table(titanic_train_with_male[titanic_train$Pclass ==2, ]$Survived))
## 25.	 what is the propability of survival for males in second class?
prop.table(table(titanic_train_with_male[titanic_train$Pclass ==2, ]$Survived))[2]
help("odds.ratio")
titanic_train_with_male$Survived
## 26.	 compute the odss of survival of Males
prop.table(table(titanic_train$Survived))[2] * sum(titanic_train_with_male$Survived) / sum(titanic_train$Survived)
## 27.	 compute the odds of survival for females
prop.table(table(titanic_train$Survived))[2] * sum(titanic_train_with_female$Survived) / sum(titanic_train$Survived)
prop.table(table(titanic_train_with_male$Survived))[2]
sum(titanic_train_with_male$Survived) / sum(titanic_train$Survived)
prop.table(table(titanic_train_with_male$Survived))[2]
Churn
cust_data = Churn
cust_data$Churn
table(cust_data)
table(cust_data$Churn)
prop.table(table(cust_data$Churn))
## Uni-Variante on discrete variable
barplot(table(cust_data$Churn))
barplot(prop.table(table(cust_data$Churn)))
?barplot
## Uni-Variante on continuous variable  => Histogram
cust_data$Day_Mins
summary(cust_data$Day_Mins)
hist(cust_data$Day_Mins)
hist(cust_data$Day_Mins, breaks = 5 )
## Box Plot
boxplot(cust_data$Day_Mins)
## two numberic var
plot(cust_data$Day_Mins, cust_data$Night_Mins)
plot(cust_data$Day_Mins, cust_data$Day_Charge)
cor(cust_data$Day_Mins, cust_data$Day_Charge)
## two numberic var
plot(cust_data$Day_Mins, cust_data$Night_Mins)
## Uni-Variante on discrete variable => Bar chart
barplot(table(cust_data$Churn))
## Uni-Variante on discrete variable => Bar chart
barplot(table(cust_data$Churn),col = 'red')
## Uni-Variante on discrete variable => Bar chart
barplot(table(cust_data$Churn),col = c('red','black'))
barplot(prop.table(table(cust_data$Churn)))
## Uni-Variante on discrete variable => Bar chart
barplot(table(cust_data$Churn),col = c('red','black'), main = 'Bar Chart for Churn')
## Uni-Variante on discrete variable => Bar chart
barplot(table(cust_data$Churn),col = c('red','black'),
main = 'Bar Chart for Churn',
xlab = 'Churn',
ylab = 'Frequency')
## two numberic var
plot(cust_data$Day_Mins, cust_data$Night_Mins)
## pie chart
pie(table(cust_data$Churn), col = c('black','red'), main = "Pie Chart of Churn")
## pie chart
a = pie(table(cust_data$Churn), col = c('black','red'), main = "Pie Chart of Churn")
barplot(cust_data$Day_Mins, cust_data$Churn)
barplot(cust_data$Day_Mins ~ cust_data$Churn)
boxplot(cust_data$Day_Mins ~ cust_data$Churn)
boxplot(cust_data$Day_Mins, cust_data$Churn)
## Stacked bar plot
table(cust_data$Churn,cust_data$Intl_Plan)
## Stacked bar plot
table(cust_data$Churn,cust_data$Intl_Plan,dnn=c("Churn","Intl.Plan"))
barplot(table(cust_data$Churn,cust_data$Intl_Plan,dnn=c("Churn","Intl.Plan"),col=c('red','blue'))
barplot(table(cust_data$Churn,cust_data$Intl_Plan,dnn=c("Churn","Intl.Plan"), col = c('red','blue'))
barplot(table(cust_data$Churn,cust_data$Intl_Plan,dnn=c("Churn","Intl.Plan"))
barplot(table(cust_data$Churn,cust_data$Intl_Plan,dnn=c("Churn","Intl.Plan"))
barplot(table(cust_data$Churn,cust_data$Intl_Plan)
Â¸
barplot(table(cust_data$Churn,cust_data$Intl_Plan))
barplot(table(cust_data$Churn,cust_data$Intl_Plan),col  = c('red','blue'))
install.packages('ggplot2')
## ggplot2
install.packages('ggplot2')
library(ggplot2)
library("ggplot2", lib.loc="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
data(mpg)
mpg = as.data.frame(mpg)
mpg
head(mpg)
ggplot(data = mpg, aes(cty), geom)
detach("package:ggplot2", unload=TRUE)
library("ggplot2", lib.loc="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
ggplot(data = mpg, aes(cty), geom) + geom_histogram()
ggplot(data = mpg, aes(cty), geom) + geom_histogram(bins = 10)
install.packages('ggplot2')
install.packages("ggplot2")
install.packages('ggplot2')
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages('ggplot2')
ggplot(data = mpg, aes(x= manufacturer, fill=drv)) + geom_bar()
library(ggplot2)
head(mpg)
ggplot(data = mpg, aes(x= manufacturer, fill=drv)) + geom_bar()
Credit
head(Credit)
#Univariate Analysis on default columns
barplot(Credit$default, col = c('red','green'))
#Univariate Analysis on default columns
barplot(table(Credit$default), col = c('red','green'))
#Univariate Analysis on default columns
barplot(table(Credit$default), col = c('red','green'), main = "Bar Chart of Loan Defaultters")
barplot(table(Credit$purpose))
head(Credit$purpose,10)
library(ggplot2)
ggplot(data = Credit,aes(purpose)) + geom_bar()
ggplot(data=mpg, aes(cty))+
geom_histogram(bins = 10)
ggplot(data=Credit,aes(purpose)) + geom_bar()
ggplot(data = Credit,aes(purpose)) + geom_bar()
ggplot(data = Credit,aes(purpose,default)) + geom_bar()
ggplot(data=mpg, aes(x="Highway",y=hwy))+
geom_boxplot()
barplot(table(Credit$default,Credit$purpose))
barplot(table(Credit$default,Credit$purpose),col = c('red','green'))
Credit$default
ggplot(data = Credit,aes(purpose,default)) + geom_bar()
ggplot(data = Credit,aes(x=purpose,fill=default)) + geom_bar()
## Stacker bar chart
ggplot(data = Credit,aes(x=purpose,fill=default)) + geom_bar()
ggplot(mpg,aes(x=manufacturer,fill=drv)) +
geom_bar(position = 'dodge')
ggplot(mpg,aes(x=manufacturer,fill=drv)) +
geom_bar(position = 'fill')
ggplot(mpg,aes(x=manufacturer,fill=drv)) +
geom_bar(position = 'dodge')
ggplot(mpg,aes(x=manufacturer,fill=drv)) +
geom_bar(position = 'fill')
ggplot(data = Credit,aes(x=purpose,fill=default)) + geom_bar(position = fill)
ggplot(data = Credit,aes(x=purpose,fill=default)) + geom_bar(position = 'fill')
ggplot(data = Credit,aes(x=purpose,fill=default)) + geom_bar(position = 'fill',show.legend = T)
ggplot(data = Credit,aes(x=purpose,fill=default)) + geom_bar(position = 'fill')
ggplot(data = Credit,aes(x=purpose,fill=default)) + geom_bar(position = 'fill',show.legend = F)
## Stacker bar chart
ggplot(data = Credit,aes(x=purpose,fill=default)) + geom_bar()
ggplot(data = Credit,aes(x=purpose,fill=default)) + geom_bar(position = 'fill')
ggplot(data = Credit,aes(x=purpose,fill=default)) + geom_bar()
## Stacker bar chart
ggplot(data = Credit,aes(x=purpose,fill=default)) + geom_bar()
head(Credit)
ggplot(data = Credit,aes(x=skilled,fill=default)) + geom_bar()
ggplot(data = Credit,aes(x=job,fill=default)) + geom_bar()
ggplot(data = Credit,aes(x=job,fill=default)) + geom_bar(position = 'fill')
## Stacker bar chart
## Purpose vs default
ggplot(data = Credit,aes(x=purpose,fill=default)) + geom_bar()
ggplot(data = Credit,aes(x=purpose,fill=default)) + geom_bar(position = 'fill')
head(Credit)
## savings_balance vs default
ggplot(data = Credit,aes(x=savings_balance,fill=default)) + geom_bar()
ggplot(data = Credit,aes(x=savings_balance,fill=default)) + geom_bar(position = 'fill')
## savings_balance vs default
ggplot(data = Credit,aes(x=savings_balance,fill=default)) + geom_bar(colour = c('red','green'))
## savings_balance vs default
ggplot(data = Credit,aes(x=savings_balance,fill=default,colour = c('red','green'))) + geom_bar()
## Job vs default => almost same default but management people defaultted more
ggplot(data = Credit,aes(x=job,fill=default)) + geom_bar(aes(colour = c('red','green')))
## Job vs default => almost same default but management people defaultted more
ggplot(data = Credit,aes(x=job,fill=default)) + geom_bar(position = position_stack(reverse = TRUE))
ggplot(data = Credit,aes(x=job,fill=default)) + geom_bar()
## Job vs default => almost same default but management people defaultted more
ggplot(data = Credit,aes(x=job,fill=default)) + geom_bar(position = position_stack(reverse = TRUE))
ggplot(data = Credit,aes(x=job,fill=default)) + geom_bar()
ggplot(data = Credit,aes(x=savings_balance,fill=default)) + geom_bar(position = 'fill')
## savings_balance vs default
ggplot(data = Credit,aes(x=savings_balance,fill=default,colour)) + geom_bar()
ggplot(data = Credit,aes(x=savings_balance,fill=default,colour)) + geom_bar()
## savings_balance vs default
ggplot(data = Credit,aes(x=savings_balance,fill=default)) + geom_bar()
ggplot(data = Credit,aes(x=savings_balance,fill=default)) + geom_bar(position = 'fill')
head(Credit)
## Stacker bar chart
## Purpose vs default => furniture/appliances more
ggplot(data = Credit,aes(x=purpose,fill=default)) + geom_bar()
ggplot(data = Credit,aes(x=purpose,fill=default)) + geom_bar(position = 'fill')
Credit$purpose
Credit$purpose['car0']
Credit$purpose = ifelse(Credit$purpose == 'car0','car',Credit$purpose)
ggplot(data = Credit,aes(x=purpose,fill=default)) + geom_bar(position = 'fill')
ggplot(data = Credit,aes(x=purpose,fill=default)) + geom_bar()
View(Credit)
Credit$purpose = ifelse(Credit$purpose == 'car0','car',Credit$purpose)
ggplot(data = Credit,aes(x=purpose,fill=default)) + geom_bar()
View(Credit)
View(Credit)
Credit <- read.csv("~/Documents/Analtics Path Files/Files:Data/credit.csv")
View(Credit)
## Stacker bar chart
## Purpose vs default => furniture/appliances more
ggplot(data = Credit,aes(x=purpose,fill=default)) + geom_bar()
Credit$purpose = ifelse(Credit$purpose == 'car0','car',Credit$purpose)
ggplot(data = Credit,aes(x=purpose,fill=default)) + geom_bar()
Credit <- read.csv("~/Documents/Analtics Path Files/Files:Data/credit.csv")
View(Credit)
## months_loan_duration vs default
ggplot(data = Credit, aes(x=months_loan_duration, fill = default)) + geom_bar()
ggplot(data = Credit, aes(x=months_loan_duration, fill = default)) + geom_bar(position = 'fill')
## months_loan_duration vs default
ggplot(data = Credit, aes(x=months_loan_duration, fill = default)) + geom_bar()
ggplot(data = Credit, aes(x=months_loan_duration, fill = default)) + geom_bar(position = 'fill')
head(Credit)
## credit_history vs default
ggplot(data = Credit, aes(x=credit_history, fill = default)) + geom_bar()
ggplot(data = Credit,aes(x=savings_balance,fill=default)) + geom_bar()
## credit_history vs default
ggplot(data = Credit, aes(x=credit_history, fill = default)) + geom_bar()
ggplot(data = Credit, aes(age,default)) + geom_boxplot()
ggplot(data = Credit, aes(default,age)) + geom_boxplot()
ggplot(data = Credit, aes(x=default,y=age)) + geom_boxplot()
ggplot(data = Credit, aes(x=default, fill = housing)) + geom_bar()
ggplot(data = Credit, aes(x=default, fill = housing)) + geom_bar(position = 'fill')
ggplot(data = Credit, aes(x=housing, fill = default)) + geom_bar(position = 'fill')
ggplot(data = Credit, aes(x=housing, fill = default,col = months_loan_duration) + geom_bar(position = 'fill')
ggplot(data = Credit, aes(x=months_loan_duration, fill = default)) + geom_bar()
## months_loan_duration vs default =>more chance for default if loan duration > 20-24
ggplot(data = Credit, aes(x=months_loan_duration, fill = default)) + geom_bar()
ggplot(data = Credit,aes(x=savings_balance,fill=default)) + geom_bar()
ggplot(data = Credit, aes(x=housing, fill = default, col = months_loan_duration) + geom_bar(position = 'fill')
head(Credit)
head(Credit)
ggplot(data = Credit, aes(months_loan_duration,amount)) + geom_jitter()
ggplot(data = Credit, aes(months_loan_duration,amount,col = default)) + geom_jitter()
ggplot(data = Credit,aes(x=purpose,fill=default)) + geom_bar(position = 'fill') + facet_grid(job)
ggplot(data = Credit,aes(x=purpose,fill=default)) + geom_bar(position = 'fill') + facet_grid(.~job)
Credit$purpose[as.character(Credit$purpose == 'car0')] = 'car'
Credit$purpose[as.character(Credit$purpose == 'car0')] = 'car'
Credit$purpose[as.character(Credit$purpose)== 'car0'] = 'car'
as.factor(Credit$purpose)
Credit$purpose[as.character(Credit$purpose)== 'car0']
ggplot(data = Credit,aes(x=purpose,fill=default)) + geom_bar()
install.packages("dslabs")
?quantile
?qnorm
library(dslabs)
data("gapminder")
gapminder %>% filter(year == 1972 & !is.na(gdp)) %>% + ggplot(aes())
gapminder <- gapminder %>% mutate(dollars_per_day = gdp/population/365)
gapminder %>% filter(year == 1972 & !is.na(gdp)) %>% + ggplot(aes(dollars_per_day)) + geom_histogram(binwidth = 1, color = "black") + scale_x_continuous(trans = "log2")
install.packages("tidyverse")
install.packages("tidyverse")
gapminder <- gapminder %>% mutate(dollars_per_day = gdp/population/365)
library(tidyverse)
gapminder <- gapminder %>% mutate(dollars_per_day = gdp/population/365)
gapminder %>% filter(year == 1972 & !is.na(gdp)) %>% + ggplot(aes(dollars_per_day)) + geom_histogram(binwidth = 1, color = "black") + scale_x_continuous(trans = "log2")
names(gapminder)
gapminder %>% filter(year == 1972 & !is.na(gdp)) %>% + ggplot(aes(dollars_per_day)) + geom_histogram(binwidth = 1, color = "black") + scale_x_continuous(trans = "log2")
class(gapminder$dollars_per_day)
head(gapminder$gdp)
gapminder %>% filter(year == 1972 & !is.na(gdp)) %>% ggplot(aes(dollars_per_day)) + geom_histogram(binwidth = 1, color = "black") + scale_x_continuous(trans = "log2")
gapminder %>% filter(year == 1972 & !is.na(gdp)) %>% ggplot(aes(log2(dollars_per_day)) + geom_histogram(binwidth = 1, color = "black")
Â¸
gapminder %>% filter(year == 1972 & !is.na(gdp)) %>% ggplot(aes(log2(dollars_per_day)) + geom_histogram(binwidth = 1, color = "black")
d
gapminder %>% filter(year == 1972 & !is.na(gdp)) %>% ggplot(aes(log2(dollars_per_day)) + geom_histogram(binwidth = 1, color = "black")
gapminder %>% filter(year == 1972 & !is.na(gdp)) %>% ggplot(aes(log2(dollars_per_day)) + geom_histogram(binwidth = 1, color = "black")
gapminder %>% filter(year == 1972 & !is.na(gdp)) %>% ggplot(aes(dollars_per_day)) + geom_histogram(binwidth = 1, color = "black") + scale_x_continuous(trans = "log2")
gapminder %>% filter(year == 1972 & !is.na(gdp)) %>% ggplot(aes(log2(dollars_per_day)) + geom_histogram(binwidth = 1, color = "black")
n
gapminder %>% filter(year == 1972 & !is.na(gdp)) %>% ggplot(aes(dollars_per_day)) + geom_histogram(binwidth = 1, color = "black") + scale_x_continuous(trans = "log2")
gapminder %>% filter(year == 1972 & !is.na(gdp)) %>% ggplot(aes(log2(dollars_per_day)) + geom_histogram(binwidth = 1, color = "black")
c
gapminder %>% filter(year == 1972 & !is.na(gdp)) %>% ggplot(aes(log2(dollars_per_day)) + geom_histogram(binwidth = 1, color = "black")
;
ggplot(cust_data, aes(Day.Mins, Night.Mins, col = Churn)) + geom_point()
library(ggplot2)
library(ggplot2)
data(mpg)
cust_data = read.csv("Logistic Regression/Churn.csv")
ggplot(mpg,aes(class)) + geom_bar()
ggplot(mpg,aes(class)) + geom_bar() + geom_text(aes(label=..count..,stat="count"))
ggplot(mpg,aes(class)) + geom_bar() + geom_text(aes(label=..count..,stat="count"))
mpg
ggplot(mpg,aes(class)) + geom_bar() + geom_text(aes(label=..count..,stat="count"))
ggplot(mpg,aes(class)) + geom_bar() + geom_text(aes(label=..count..),stat="count"))
ggplot(mpg,aes(class)) + geom_bar() + geom_text(aes(label=..count..),stat="count")
ggplot(mpg,aes(class)) + geom_bar() + geom_label(aes(label=..count..),stat="count")
data("Boston")
?Boston
setwd("~/Documents/Analtics Path Files")
data("Boston")
library(MASS)
data("Boston")
?Boston
boston_data = data("Boston")
head(boston_data)
View(Boston)
boston_data = data("Boston")
head(boston_data)
boston_data = Boston
head(boston_data)
str(boston_data)
summary(boston_data)
## Verify all columns are numeric
str(boston_data)
cor(boston_data)
?corrplot()
corrplot(cor(boston_data), method = "number")
corrplot(boston_data, method = "number")
View(cor(boston_data))
?Boston
## Scaling => Min-Max
min_max_scaling_fn = function(x){
return ((x-min(x))/(max(x)-min(x)))
}
## Apply Scaling
for(i in 1:ncol(boston_data)){
boston_data[,i] = min_max_scaling_fn(boston_data[,i])
}
## Verify Data Scaled
summary(boston_data)
## K-Means Clustering
cluster = kmeans(x=boston_data, centers = 3)
## K-Means Clustering
k_means_cluster = kmeans(x=boston_data, centers = 3)
k_means_cluster$cluster
k_means_cluster$centers
names(k_means_cluster)
## Identify Best number of clusters
withinByBetween = c()
for(i in 2:15){
clust = kmeans(x=boston_data,centers = i)
##betweenByTotal = c(betweenByTotal,clust$betweenss/clust$totss)
withinByBetween = c(withinByBetween, mean(k_means_cluster$withinss)/clust$betweenss)
}
plot(2:15,withinByBetween,type = 'l')
## Identify Best number of clusters
withinByBetween = c()
for(i in 2:15){
clust = kmeans(x=boston_data,centers = i)
##betweenByTotal = c(betweenByTotal,clust$betweenss/clust$totss)
withinByBetween = c(withinByBetween, mean(clust$withinss)/clust$betweenss)
}
plot(2:15,withinByBetween,type = 'l')
k_means_cluster$cluster
## K-Means Clustering => Always choose minimum number of clusters
k_means_cluster = kmeans(x=boston_data, centers = 9)
k_means_cluster$centers
k_means_cluster$cluster
## Assign cluster number to each row
boston_data$cluster = k_means_cluster$cluster
head(boston_data)
View(cor(boston_data))
corrplot(cor(boston_data), method = "number")
corrplot(cor(boston_data))
library(corrplot)
corrplot(cor(boston_data), method = "number")
k_means_cluster$centers
View(Churn_temp_2)
save.image("~/Documents/Analtics Path Files/RData.RData")
?Boston
